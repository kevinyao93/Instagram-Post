{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Chatbox/Chatbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chatbox.css';\nimport { Image, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Textarea from 'react-expanding-textarea';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport useLocalStorage from 'react-use-localstorage';\n\nconst Chatbox = () => {\n  _s();\n\n  const [chatValue, setChatValue] = useLocalStorage('chatData', []);\n  const [text, setText] = useState('');\n  const [likedCount, setLikedCount] = useState(0);\n  const chatRef = useRef(null);\n  const tableData = chatValue.map((comment, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        align: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \" \", comment.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: comment.liked ? /*#__PURE__*/_jsxDEV(BsHeartFill, {\n          onClick: () => likedComment(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(BsHeart, {\n          onClick: () => likedComment(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  });\n\n  function handleButtonClick(text) {\n    if (text) {\n      const messageObject = {\n        name: 'Nvidia',\n        comment: text,\n        replies: {},\n        liked: false,\n        thumbnail: 'nvidia-logo.jpeg'\n      };\n      setChatValue([...chatValue, messageObject]);\n      textRef.current.value = '';\n      chatRef.current.scrollIntoView();\n    }\n  }\n\n  const likedComment = index => {\n    let newChat = chatValue;\n    newChat[index]['liked'] = !newChat[index]['liked'];\n    const increment = newChat[index]['liked'] ? 1 : -1;\n    setChatValue(newChat);\n    setLikedCount(likedCount + increment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setChatValue([]),\n      children: \"Clear chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatdiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Textarea, {\n        className: \"textarea\",\n        style: {\n          display: 'block',\n          width: '500px'\n        },\n        placeholder: \"Add a comment...\",\n        maxLength: \"256\",\n        onChange: e => {\n          setText(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleButtonClick(text),\n          variant: \"link\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatbox, \"Os8AsSIXPSbg493Vc0ZiOAPL6FA=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = Chatbox;\nexport default Chatbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"sources":["/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Chatbox/Chatbox.js"],"names":["React","useState","useEffect","useRef","Image","InputGroup","FormControl","Button","Textarea","BsHeartFill","BsHeart","useLocalStorage","Chatbox","chatValue","setChatValue","text","setText","likedCount","setLikedCount","chatRef","tableData","map","comment","index","name","liked","likedComment","handleButtonClick","messageObject","replies","thumbnail","textRef","current","value","scrollIntoView","newChat","increment","display","width","e","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport './Chatbox.css';\n\nimport {Image, InputGroup, FormControl, Button} from 'react-bootstrap';\nimport Textarea from 'react-expanding-textarea';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\n\nimport useLocalStorage from 'react-use-localstorage';\n\nconst Chatbox = () => {\n  const [chatValue, setChatValue] = useLocalStorage('chatData', []);\n  const [text, setText] = useState('');\n  const [likedCount, setLikedCount] = useState(0);\n\n  const chatRef = useRef(null);\n\n  const tableData = chatValue.map((comment, index) => {\n    return(\n      <tr>\n        <td align=\"left\">\n          <b>{comment.name}</b> {comment.comment}\n        </td>\n        <td>\n          {comment.liked ? <BsHeartFill onClick={() => likedComment(index)}/> : <BsHeart onClick={() => likedComment(index)}/>}\n        </td>\n      </tr>\n    );\n  });\n\n  function handleButtonClick(text) {\n    if(text) {\n      const messageObject = {\n        name: 'Nvidia',\n        comment: text,\n        replies: {},\n        liked: false,\n        thumbnail:'nvidia-logo.jpeg',\n      }\n      setChatValue([...chatValue, messageObject]);\n      textRef.current.value = '';\n      chatRef.current.scrollIntoView();\n    }\n  }\n\n  const likedComment = index => {\n    let newChat = chatValue;\n    newChat[index]['liked'] = !newChat[index]['liked'];\n    const increment = newChat[index]['liked'] ? 1 : -1;\n    setChatValue(newChat);\n    setLikedCount(likedCount + increment);\n  }\n\n  return(\n    <div>\n      <Button onClick={() => setChatValue([])}>Clear chat</Button>\n      <div className=\"chatdiv\" >\n        <table>\n          <tbody>\n            {tableData}\n          </tbody>\n        </table>\n        <div ref={chatRef}/>\n      </div>\n      <InputGroup className=\"mb-3\">\n        <Textarea\n          className=\"textarea\"\n          style={{ display: 'block', width:'500px'}}\n          placeholder=\"Add a comment...\"\n          maxLength=\"256\"\n          onChange={e => {\n            setText(e.target.value);\n          }}\n        />\n        <InputGroup.Append>\n          <Button onClick={() => handleButtonClick(text)} variant=\"link\">Post</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </div>\n  );\n}\n\nexport default Chatbox;\n"]},"metadata":{},"sourceType":"module"}