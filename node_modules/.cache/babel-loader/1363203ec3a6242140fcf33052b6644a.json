{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Chatbox/Chatbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './Chatbox.css';\nimport { Image, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Textarea from 'react-expanding-textarea';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport useLocalStorageState from 'use-local-storage-state';\n\nconst Chatbox = ({\n  view\n}) => {\n  _s();\n\n  const [chatValue, setChatValue] = useLocalStorageState('chatData', []);\n  const [likedCount, setLikedCount] = useState(0);\n  const textRef = useRef(null);\n  console.log(view);\n\n  function getTableData(values) {\n    if (view == 'portrait') {\n      return values.map((comment, index) => {\n        if ([0, 1, values.length - 2, values.length - 1].includes(index)) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"comment\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: comment.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this), \" \", comment.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"heart\",\n              children: comment.liked ? /*#__PURE__*/_jsxDEV(BsHeartFill, {\n                onClick: () => likedComment(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(BsHeart, {\n                onClick: () => likedComment(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"EXPAND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this);\n        }\n      });\n    }\n\n    return values.map((comment, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: comment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), \" \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"heart\",\n          children: comment.liked ? /*#__PURE__*/_jsxDEV(BsHeartFill, {\n            onClick: () => likedComment(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(BsHeart, {\n            onClick: () => likedComment(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  function handleButtonClick() {\n    if (textRef) {\n      const messageObject = {\n        name: 'Nvidia',\n        comment: textRef.current.value,\n        replies: {},\n        liked: false,\n        thumbnail: 'nvidia-logo.jpeg'\n      };\n      setChatValue([...chatValue, messageObject]);\n      textRef.current.value = '';\n    }\n  }\n\n  const likedComment = index => {\n    let newChat = chatValue;\n    newChat[index]['liked'] = !newChat[index]['liked'];\n    const increment = newChat[index]['liked'] ? 1 : -1;\n    setChatValue(newChat);\n    setLikedCount(likedCount + increment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setChatValue([]),\n      children: \"Clear chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatdiv\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getTableData(chatValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Textarea, {\n        className: \"textarea\",\n        style: {\n          display: 'block',\n          width: '500px'\n        },\n        placeholder: \"Add a comment...\",\n        maxLength: \"256\",\n        ref: textRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleButtonClick(),\n          variant: \"link\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatbox, \"jW3DgksdnPyWirmTslxvRmW+W1Y=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = Chatbox;\nexport default Chatbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"sources":["/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Chatbox/Chatbox.js"],"names":["React","useState","useRef","Image","InputGroup","FormControl","Button","Textarea","BsHeartFill","BsHeart","useLocalStorageState","Chatbox","view","chatValue","setChatValue","likedCount","setLikedCount","textRef","console","log","getTableData","values","map","comment","index","length","includes","name","liked","likedComment","handleButtonClick","messageObject","current","value","replies","thumbnail","newChat","increment","display","width"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react';\nimport './Chatbox.css';\n\nimport {Image, InputGroup, FormControl, Button} from 'react-bootstrap';\nimport Textarea from 'react-expanding-textarea';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\n\nimport useLocalStorageState from 'use-local-storage-state';\n\nconst Chatbox = ({view}) => {\n  const [chatValue, setChatValue] = useLocalStorageState('chatData', []);\n  const [likedCount, setLikedCount] = useState(0);\n\n  const textRef = useRef(null);\n  console.log(view);\n  function getTableData(values) {\n    if (view == 'portrait') {\n      return (values.map((comment, index) => {\n        if ([0, 1, values.length - 2, values.length - 1].includes(index)) {\n          return(\n            <tr>\n              <td className=\"comment\">\n                <b>{comment.name}</b> {comment.comment}\n              </td>\n              <td className=\"heart\">\n                {comment.liked ?\n                  <BsHeartFill onClick={() => likedComment(index)}/> :\n                  <BsHeart onClick={() => likedComment(index)}/>}\n              </td>\n            </tr>\n          );\n        } else {\n          return (\n            <tr>\n              <td>\n                EXPAND\n              </td>\n            </tr>\n          )\n        }\n\n      }));\n    }\n    return (values.map((comment, index) => {\n      return(\n        <tr>\n          <td className=\"comment\">\n            <b>{comment.name}</b> {comment.comment}\n          </td>\n          <td className=\"heart\">\n            {comment.liked ?\n              <BsHeartFill onClick={() => likedComment(index)}/> :\n              <BsHeart onClick={() => likedComment(index)}/>}\n          </td>\n        </tr>\n      );\n    }));\n  }\n\n  function handleButtonClick() {\n    if(textRef) {\n      const messageObject = {\n        name: 'Nvidia',\n        comment: textRef.current.value,\n        replies: {},\n        liked: false,\n        thumbnail:'nvidia-logo.jpeg',\n      }\n      setChatValue([...chatValue, messageObject]);\n      textRef.current.value = '';\n    }\n  }\n\n  const likedComment = index => {\n    let newChat = chatValue;\n    newChat[index]['liked'] = !newChat[index]['liked'];\n    const increment = newChat[index]['liked'] ? 1 : -1;\n    setChatValue(newChat);\n    setLikedCount(likedCount + increment);\n  }\n\n  return(\n    <div>\n      <Button onClick={() => setChatValue([])}>Clear chat</Button>\n      <div className=\"chatdiv\" >\n        <table>\n          <tbody>\n            {getTableData(chatValue)}\n          </tbody>\n        </table>\n      </div>\n      <InputGroup className=\"mb-3\">\n        <Textarea\n          className=\"textarea\"\n          style={{ display: 'block', width:'500px'}}\n          placeholder=\"Add a comment...\"\n          maxLength=\"256\"\n          ref={textRef}\n        />\n        <InputGroup.Append>\n          <Button onClick={() => handleButtonClick()} variant=\"link\">Post</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </div>\n  );\n}\n\nexport default Chatbox;\n"]},"metadata":{},"sourceType":"module"}