{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Toolbar/Toolbar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Toolbar.css';\nimport { statusStorage } from '../Storage/Storage.js';\nimport { BsHeartFill, BsHeart, BsUpload, BsBookmark, BsBookmarkFill, BsChat } from \"react-icons/bs\";\n\nconst Toolbar = ({\n  view,\n  setView,\n  textRef\n}) => {\n  const [status, setStatus] = statusStorage();\n  console.log(view);\n  console.log(setView);\n  console.log(textRef);\n\n  const toggleComment = field => {\n    let addUser = true;\n    let newStatus = status;\n\n    for (let i = 0; i < newStatus[field].length; i += 1) {\n      if (newStatus[field][i].name === newStatus.currentUser.name) {\n        newStatus[field].splice(i, 1);\n        addUser = false;\n      }\n    }\n\n    if (addUser) newStatus[field] = [...newStatus[field], status.currentUser];\n    setStatus(newStatus);\n  };\n\n  const fieldIncludesUser = field => {\n    for (let i = 0; i < status[field].length; i += 1) {\n      if (status[field][i].name === status.currentUser.name) {\n        return true;\n      }\n    }\n\n    return false;\n  }; //  const chatClicked = () => {\n  //    return true;\n  //  }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"lefticons\",\n            children: fieldIncludesUser('liked') ? /*#__PURE__*/_jsxDEV(BsHeartFill, {\n              onClick: () => toggleComment('liked')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(BsHeart, {\n              onClick: () => toggleComment('liked')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"lefticons\",\n            children: /*#__PURE__*/_jsxDEV(BsChat, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"lefticons\",\n            children: /*#__PURE__*/_jsxDEV(BsUpload, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"righticon\",\n            children: fieldIncludesUser('bookmarked') ? /*#__PURE__*/_jsxDEV(BsBookmarkFill, {\n              onClick: () => toggleComment('bookmarked')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(BsBookmark, {\n              onClick: () => toggleComment('bookmarked')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: [status.liked.length, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Toolbar;\nToolbar.propTypes = {\n  view: PropTypes.string.isRequired,\n  setView: PropTypes.func.isRequired,\n  textRef: PropTypes.func\n};\nexport default Toolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"sources":["/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Toolbar/Toolbar.js"],"names":["React","PropTypes","statusStorage","BsHeartFill","BsHeart","BsUpload","BsBookmark","BsBookmarkFill","BsChat","Toolbar","view","setView","textRef","status","setStatus","console","log","toggleComment","field","addUser","newStatus","i","length","name","currentUser","splice","fieldIncludesUser","liked","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Toolbar.css';\n\nimport { statusStorage } from '../Storage/Storage.js';\n\nimport { BsHeartFill, BsHeart, BsUpload, BsBookmark, BsBookmarkFill, BsChat } from \"react-icons/bs\";\n\nconst Toolbar = ({view, setView, textRef}) => {\n  const [status, setStatus] = statusStorage();\n  console.log(view);\n  console.log(setView);\n  console.log(textRef);\n  const toggleComment = field => {\n    let addUser = true;\n    let newStatus = status;\n    for (let i = 0; i < newStatus[field].length; i += 1) {\n      if (newStatus[field][i].name === newStatus.currentUser.name) {\n        newStatus[field].splice(i, 1);\n        addUser = false;\n      }\n    }\n    if (addUser) newStatus[field] = [...newStatus[field], status.currentUser];\n    setStatus(newStatus)\n  }\n\n  const fieldIncludesUser = field => {\n    for (let i = 0; i < status[field].length; i += 1) {\n      if (status[field][i].name === status.currentUser.name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n//  const chatClicked = () => {\n//    return true;\n//  }\n\n  return(\n    <div>\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"lefticons\">\n              {fieldIncludesUser('liked') ?\n                <BsHeartFill onClick={() => toggleComment('liked')}/> :\n                <BsHeart onClick={() => toggleComment('liked')}/>}\n            </td>\n            <td className=\"lefticons\"><BsChat /></td>\n            <td className=\"lefticons\"><BsUpload /></td>\n            <td className=\"righticon\">\n              {fieldIncludesUser('bookmarked') ?\n                <BsBookmarkFill onClick={() => toggleComment('bookmarked')}/> :\n                <BsBookmark onClick={() => toggleComment('bookmarked')}/>}\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">{status.liked.length} likes</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  view: PropTypes.string.isRequired,\n  setView: PropTypes.func.isRequired,\n  textRef: PropTypes.func,\n}\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}