{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Chatbox/Chatbox.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Chatbox.css';\nimport { Table, InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Textarea from 'react-expanding-textarea';\n\nconst useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (err) {\n      console.log(err);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useLocalStorage, \"9yAJrPst8xzolJmQGvsfaOZBeGY=\");\n\nconst Chatbox = () => {\n  _s2();\n\n  const [chatValue, setChatValue] = useLocalStorage('placeholder');\n  const [text, setText] = useState('');\n\n  function handleButtonClick(text) {\n    const messageObject = {\n      name: 'Nvidia',\n      comment: text,\n      liked: false,\n      thumbnail: 'nvidia-logo.jpeg'\n    };\n    console.log(chatValue);\n    setChatValue([...chatValue, messageObject]);\n  }\n\n  const tableData = chatValue.map(comment => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: comment.thumbnail,\n          style: {\n            \"height\": \"50px\",\n            \"width\": \"50px\"\n          },\n          roundedCircle: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        align: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), \" \", comment.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: comment.liked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatdiv\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        borderless: true,\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Textarea, {\n        className: \"textarea\",\n        style: {\n          display: 'block',\n          width: '500px'\n        },\n        placeholder: \"Add a comment...\",\n        maxLength: \"256\",\n        onChange: e => {\n          setText(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleButtonClick(text),\n          variant: \"outline-secondary\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Chatbox, \"8SDA3ieZbn+b7QTqtwmguQg0YYw=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = Chatbox;\nexport default Chatbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"sources":["/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Chatbox/Chatbox.js"],"names":["React","useState","useEffect","Table","InputGroup","FormControl","Button","Textarea","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","err","console","log","setValue","value","valueToStore","Function","setItem","stringify","error","Chatbox","chatValue","setChatValue","text","setText","handleButtonClick","messageObject","name","comment","liked","thumbnail","tableData","map","display","width","e","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './Chatbox.css';\n\nimport {Table, InputGroup, FormControl, Button} from 'react-bootstrap';\nimport Textarea from 'react-expanding-textarea';\n\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (err) {\n      console.log(err);\n      return initialValue;\n    }\n  });\n  const setValue = value => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return [storedValue, setValue];\n}\n\nconst Chatbox = () => {\n  const [chatValue, setChatValue] = useLocalStorage('placeholder');\n  const [text, setText] = useState('');\n  function handleButtonClick(text) {\n    const messageObject = {\n      name: 'Nvidia',\n      comment: text,\n      liked: false,\n      thumbnail:'nvidia-logo.jpeg',\n    }\n    console.log(chatValue);\n    setChatValue([...chatValue, messageObject]);\n  }\n\n  const tableData = chatValue.map(comment => {\n    return(\n      <tr>\n        <td>\n          <Image src={comment.thumbnail} style={{\"height\":\"50px\", \"width\":\"50px\"}} roundedCircle />\n        </td>\n        <td align=\"left\">\n          <b>{comment.name}</b> {comment.comment}\n        </td>\n        <td>\n          {comment.liked}\n        </td>\n      </tr>\n    );\n  });\n\n  return(\n    <div>\n      <div className=\"chatdiv\">\n        <Table borderless>\n          <tbody>\n            {tableData}\n          </tbody>\n        </Table>\n      </div>\n      <InputGroup className=\"mb-3\">\n        <Textarea\n          className=\"textarea\"\n          style={{ display: 'block', width:'500px'}}\n          placeholder=\"Add a comment...\"\n          maxLength=\"256\"\n          onChange={e => {\n            setText(e.target.value);\n          }}\n        />\n        <InputGroup.Append>\n          <Button onClick={() => handleButtonClick(text)} variant=\"outline-secondary\">Post</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </div>\n  );\n}\n\nexport default Chatbox;\n"]},"metadata":{},"sourceType":"module"}