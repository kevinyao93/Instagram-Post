{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Chatbox/Chatbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './Chatbox.css';\nimport { Image, InputGroup, FormControl, Button, Row, Col } from 'react-bootstrap';\nimport Textarea from 'react-expanding-textarea';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\nimport Toolbar from '../Toolbar/Toolbar.js';\nimport { commentStorage, statusStorage } from '../Storage/Storage.js';\n\nconst Chatbox = ({\n  view,\n  setView\n}) => {\n  _s();\n\n  const [chatValue, setChatValue] = commentStorage();\n  const [status, setStatus] = statusStorage();\n  const [likedCount, setLikedCount] = useState(0);\n  const textRef = useRef(null);\n\n  function getTableData(values) {\n    if (view == 'portrait') {\n      let expand = false;\n      return values.map((comment, index) => {\n        if ([0, 1, values.length - 2, values.length - 1].includes(index)) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"comment\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: comment.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this), \" \", comment.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"heart\",\n              children: comment.liked ? /*#__PURE__*/_jsxDEV(BsHeartFill, {\n                onClick: () => likedComment(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(BsHeart, {\n                onClick: () => likedComment(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this);\n        }\n\n        if (!expand) {\n          expand = true;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => setView('landscape'),\n                children: [\"View all \", values.length - 4, \" comments\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this);\n        }\n      });\n    }\n\n    return values.map((comment, index) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: \"temp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  function handleButtonClick() {\n    if (textRef) {\n      const messageObject = {\n        name: status.currentUser.name,\n        comment: textRef.current.value,\n        replies: {},\n        liked: false,\n        thumbnail: status.currentUser.thumbnail\n      };\n      setChatValue([...chatValue, messageObject]);\n      textRef.current.value = '';\n    }\n  }\n\n  const likedComment = index => {\n    let newChat = chatValue;\n    newChat[index]['liked'] = !newChat[index]['liked'];\n    const increment = newChat[index]['liked'] ? 1 : -1;\n    setChatValue(newChat);\n    setLikedCount(likedCount + increment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: view + 'chatbox',\n    children: [view == 'portrait' ? /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: view + \"chatdiv\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: getTableData(chatValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), view == 'landscape' ? /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 30\n    }, this) : '', /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Textarea, {\n        className: \"textarea\",\n        placeholder: \"Add a comment...\",\n        maxLength: \"256\",\n        ref: textRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        className: \"post\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleButtonClick(),\n          variant: \"link\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatbox, \"Zj8Pf7u79BoGGmTV/L6Hx8e6qZQ=\");\n\n_c = Chatbox;\nexport default Chatbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"sources":["/Users/kevinyao/Documents/GitHub/create-react-app/my-app/src/components/Chatbox/Chatbox.js"],"names":["React","useState","useRef","Image","InputGroup","FormControl","Button","Row","Col","Textarea","BsHeartFill","BsHeart","Toolbar","commentStorage","statusStorage","Chatbox","view","setView","chatValue","setChatValue","status","setStatus","likedCount","setLikedCount","textRef","getTableData","values","expand","map","comment","index","length","includes","name","liked","likedComment","handleButtonClick","messageObject","currentUser","current","value","replies","thumbnail","newChat","increment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAO,eAAP;AAEA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,WAA3B,EAAwCC,MAAxC,EAAgDC,GAAhD,EAAqDC,GAArD,QAA+D,iBAA/D;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,gBAArC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,uBAA9C;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,cAAc,EAAhD;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBP,aAAa,EAAzC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAMuB,OAAO,GAAGtB,MAAM,CAAC,IAAD,CAAtB;;AACA,WAASuB,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,QAAIV,IAAI,IAAI,UAAZ,EAAwB;AACtB,UAAIW,MAAM,GAAG,KAAb;AACA,aAAQD,MAAM,CAACE,GAAP,CAAW,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrC,YAAI,CAAC,CAAD,EAAI,CAAJ,EAAOJ,MAAM,CAACK,MAAP,GAAgB,CAAvB,EAA0BL,MAAM,CAACK,MAAP,GAAgB,CAA1C,EAA6CC,QAA7C,CAAsDF,KAAtD,CAAJ,EAAkE;AAChE,8BACE;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,SAAd;AAAA,sCACE;AAAA,0BAAID,OAAO,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,sBADF,OACyBJ,OAAO,CAACA,OADjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA,wBACGA,OAAO,CAACK,KAAR,gBACC,QAAC,WAAD;AAAa,gBAAA,OAAO,EAAE,MAAMC,YAAY,CAACL,KAAD;AAAxC;AAAA;AAAA;AAAA;AAAA,sBADD,gBAEC,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAE,MAAMK,YAAY,CAACL,KAAD;AAApC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD;;AACD,YAAI,CAACH,MAAL,EAAa;AACXA,UAAAA,MAAM,GAAG,IAAT;AACA,8BACE;AAAA,mCACE;AAAA,qCACE;AAAG,gBAAA,OAAO,EAAE,MAAMV,OAAO,CAAC,WAAD,CAAzB;AAAA,wCAAkDS,MAAM,CAACK,MAAP,GAAgB,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD;AACF,OAzBO,CAAR;AA0BD;;AACD,WAAQL,MAAM,CAACE,GAAP,CAAW,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrC,0BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANO,CAAR;AAOD;;AAED,WAASM,iBAAT,GAA6B;AAC3B,QAAGZ,OAAH,EAAY;AACV,YAAMa,aAAa,GAAG;AACpBJ,QAAAA,IAAI,EAAEb,MAAM,CAACkB,WAAP,CAAmBL,IADL;AAEpBJ,QAAAA,OAAO,EAAEL,OAAO,CAACe,OAAR,CAAgBC,KAFL;AAGpBC,QAAAA,OAAO,EAAE,EAHW;AAIpBP,QAAAA,KAAK,EAAE,KAJa;AAKpBQ,QAAAA,SAAS,EAAEtB,MAAM,CAACkB,WAAP,CAAmBI;AALV,OAAtB;AAOAvB,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAemB,aAAf,CAAD,CAAZ;AACAb,MAAAA,OAAO,CAACe,OAAR,CAAgBC,KAAhB,GAAwB,EAAxB;AACD;AACF;;AAED,QAAML,YAAY,GAAGL,KAAK,IAAI;AAC5B,QAAIa,OAAO,GAAGzB,SAAd;AACAyB,IAAAA,OAAO,CAACb,KAAD,CAAP,CAAe,OAAf,IAA0B,CAACa,OAAO,CAACb,KAAD,CAAP,CAAe,OAAf,CAA3B;AACA,UAAMc,SAAS,GAAGD,OAAO,CAACb,KAAD,CAAP,CAAe,OAAf,IAA0B,CAA1B,GAA8B,CAAC,CAAjD;AACAX,IAAAA,YAAY,CAACwB,OAAD,CAAZ;AACApB,IAAAA,aAAa,CAACD,UAAU,GAAGsB,SAAd,CAAb;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAE5B,IAAI,GAAG,SAAvB;AAAA,eACGA,IAAI,IAAI,UAAR,gBAAqB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAArB,GAAmC,EADtC,eAEE;AAAK,MAAA,SAAS,EAAEA,IAAI,GAAG,SAAvB;AAAA,6BACE;AAAA,+BACE;AAAA,oBACGS,YAAY,CAACP,SAAD;AADf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EASGF,IAAI,IAAI,WAAR,gBAAsB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAtB,GAAoC,EATvC,eAWE,QAAC,UAAD;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,WAAW,EAAC,kBAFd;AAGE,QAAA,SAAS,EAAC,KAHZ;AAIE,QAAA,GAAG,EAAEQ;AAJP;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,UAAD,CAAY,MAAZ;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMY,iBAAiB,EAAxC;AAA4C,UAAA,OAAO,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA5FD;;GAAMrB,O;;KAAAA,O;AA8FN,eAAeA,OAAf","sourcesContent":["import React, {useState, useRef} from 'react';\nimport './Chatbox.css';\n\nimport {Image, InputGroup, FormControl, Button, Row, Col} from 'react-bootstrap';\nimport Textarea from 'react-expanding-textarea';\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\n\nimport Toolbar from '../Toolbar/Toolbar.js';\n\nimport { commentStorage, statusStorage } from '../Storage/Storage.js';\n\nconst Chatbox = ({view, setView}) => {\n  const [chatValue, setChatValue] = commentStorage();\n  const [status, setStatus] = statusStorage();\n  const [likedCount, setLikedCount] = useState(0);\n\n  const textRef = useRef(null);\n  function getTableData(values) {\n    if (view == 'portrait') {\n      let expand = false;\n      return (values.map((comment, index) => {\n        if ([0, 1, values.length - 2, values.length - 1].includes(index)) {\n          return(\n            <tr>\n              <td className=\"comment\">\n                <b>{comment.name}</b> {comment.comment}\n              </td>\n              <td className=\"heart\">\n                {comment.liked ?\n                  <BsHeartFill onClick={() => likedComment(index)}/> :\n                  <BsHeart onClick={() => likedComment(index)}/>}\n              </td>\n            </tr>\n          );\n        }\n        if (!expand) {\n          expand = true;\n          return(\n            <tr>\n              <td>\n                <p onClick={() => setView('landscape')}>View all {values.length - 4} comments</p>\n              </td>\n            </tr>\n          );\n        }\n      }));\n    }\n    return (values.map((comment, index) => {\n      return(\n        <Row>\n          temp\n        </Row>\n      );\n    }));\n  }\n\n  function handleButtonClick() {\n    if(textRef) {\n      const messageObject = {\n        name: status.currentUser.name,\n        comment: textRef.current.value,\n        replies: {},\n        liked: false,\n        thumbnail: status.currentUser.thumbnail,\n      }\n      setChatValue([...chatValue, messageObject]);\n      textRef.current.value = '';\n    }\n  }\n\n  const likedComment = index => {\n    let newChat = chatValue;\n    newChat[index]['liked'] = !newChat[index]['liked'];\n    const increment = newChat[index]['liked'] ? 1 : -1;\n    setChatValue(newChat);\n    setLikedCount(likedCount + increment);\n  }\n\n  return(\n    <div className={view + 'chatbox'}>\n      {view == 'portrait' ? <Toolbar /> : ''}\n      <div className={view + \"chatdiv\"}>\n        <table>\n          <tbody>\n            {getTableData(chatValue)}\n          </tbody>\n        </table>\n      </div>\n      {view == 'landscape' ? <Toolbar /> : ''}\n\n      <InputGroup>\n        <Textarea\n          className=\"textarea\"\n          placeholder=\"Add a comment...\"\n          maxLength=\"256\"\n          ref={textRef}\n        />\n        <InputGroup.Append className=\"post\">\n          <Button onClick={() => handleButtonClick()} variant=\"link\">Post</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </div>\n  );\n}\n\nexport default Chatbox;\n"]},"metadata":{},"sourceType":"module"}